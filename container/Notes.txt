Container 
	https://www.graalvm.org/22.1/docs/getting-started/container-images/
	
	
	To support container-based development, 
		GraalVM Community container images are published 
			in the GitHub Container Registry. 
	https://github.com/orgs/graalvm/packages	
		
	pull a package by 
		name or 
		name:version tag. 
	
	To install GraalVM JDK from the command line, use:
		docker pull ghcr.io/graalvm/jdk:java17-<version>

	Alternatively, use GraalVM JDK as base image in Dockerfile:
		FROM ghcr.io/graalvm/jdk:java17-<version>


	different images provided 
		depending on the 
			platforms
			architecture and 
			Java version. 

	The images are based on 
		Oracle Linux  
		GraalVM Community downloaded, 
		unzipped and made available. 
	It means that 
		Java, 
		JavaScript, and
		LLVM 
			runtime are available out of the box.

	start a container 
		docker run -it --rm ghcr.io/graalvm/jdk:java17-22.1.0 bash

		â†’ docker run -it --rm ghcr.io/graalvm/jdk:java17-22.1.0 bash

		bash-4.4# java -version
		openjdk version "17.0.3" 2022-04-19
		OpenJDK Runtime Environment GraalVM CE 22.1.0 (build 17.0.3+5-jvmci-22.1-b04)
		OpenJDK 64-Bit Server VM GraalVM CE 22.1.0 (build 17.0.3+5-jvmci-22.1-b04, mixed mode, sharing)

		bash-4.4# js -version
		GraalVM JavaScript (GraalVM CE Native 22.1.0)
		> 1 + 1
		2
		> quit()
		>

		bash-4.4# lli --version
		LLVM 12.0.1 (GraalVM CE Native 22.1.0)
		You have pulled a size compact GraalVM Community container image with the GraalVM JDK pre-installed. JavaScript and lli are the components immediately available at the GraalVM Community image core. However, the GraalVM Updater, gu, utility is also included and may be used to install additional languages and runtimes like Node.js, Ruby, R, Python or WebAssembly. Check what other configuration types of container images are available here.

		To add the Ruby support, run the following command (the output below is truncated for brevity):
		docker run -it --rm ghcr.io/graalvm/jdk:java17-22.1.0 bash
		bash-4.4# gu install ruby
		Downloading: Component catalog
		Processing component archive: Component ruby
		Downloading: Component ruby
		[######              ]
		...

		Volume attachment
			docker run -it --rm -v /volume/on/host:/path/inside/container ghcr.io/graalvm/jdk:java17-22.1.0 bash

If you want to create Docker images that contain GraalVM with Ruby, R, or Python, you can use a Dockerfile like the example below, which uses ghcr.io/graalvm/jdk:java17-22.1.0 as the base image, installs the Ruby support using the gu utility, then creates and runs a sample Ruby program.
FROM ghcr.io/graalvm/jdk:java17-22.1.0
RUN gu install ruby
WORKDIR /workdir
RUN echo 'puts "Hello from Ruby!\nVersion: #{RUBY_DESCRIPTION}"' > app.rb
CMD ruby app.rb

If you put the above snippet in a Dockerfile in the current directory, you can build and run it with the following commands:

docker build -t ruby-demo .
...
docker run -it --rm ruby-demo
Hello from Ruby!
Version: truffleruby 22.1.0, like ruby 3.0.2, GraalVM CE Native [x86_64-darwin]


